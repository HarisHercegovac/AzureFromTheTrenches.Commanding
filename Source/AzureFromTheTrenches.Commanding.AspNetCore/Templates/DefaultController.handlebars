using System.Collections.Generic;
using System.Threading.Tasks;
using AzureFromTheTrenches.Commanding.Abstractions;
using Microsoft.AspNetCore.Mvc;

namespace {{Namespace}}
{
    [Route("{{Route}}")]
    public class {{Name}} : Controller
    {
        private readonly ICommandDispatcher _commandDispatcher;

        public {{Name}} (ICommandDispatcher commandDispatcher)
        {
            _commandDispatcher = commandDispatcher;
        }

{{#each Actions}}
        {{{actionAttributes}}}
        public async Task<IActionResult> {{Verb}}{{CommandType.Name}} ({{bindingAttribute}}{{CommandType.FullName}} command)
        {
            if (!ModelState.IsValid)
            {
                return BadRequest(ModelState);
            }
    {{#if ResultType}}
            var commandResult = await _commandDispatcher.DispatchAsync(command);
            return Ok(commandResult.Result);
    {{else}}
            await _commandDispatcher.DispatchAsync(command);
            return Ok();
    {{/if}}
        }
{{/each}}
    }
}
